@inherits LayoutComponentBase

@inject HttpClient Http
@inject BrowserService Service

@using System.Net.Http
@using BigBeerData.Shared
@using Client.Shared

<MudThemeProvider Theme="BeerTheme"/>
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar>
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
            <img src="/img/onthebeers.png" alt="On The Beers/Big Beer Data" style="max-height: 100%;"/>
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen" Class="sidebar">
        <NavMenu parent="@this" />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.False">
            <Client.Pages.Index @ref="mainPage" parent="@this" />
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    @code {
        MudTheme BeerTheme = new MudTheme()
        {
            Palette = new Palette()
            {
                Primary = Colors.Yellow.Default,
                Secondary = Colors.Brown.Darken2,
                AppbarBackground = Colors.Shades.White,
                AppbarText = Colors.Brown.Darken3
            },
        };


        public bool loaded = false;
        public Client.Pages.Index mainPage;
        public List<AreaLocation> locations;
        public int selected = 1;
        
        public async Task UpdateLocation(int id)
        {
            if (mainPage != null)
            {
                await Task.Run(async () => await mainPage.LocationUpdated(id));
            }
        }


        public void setLoaded(bool loadedValue)
        {
            loaded = loadedValue;
        }

        protected override async Task OnInitializedAsync()
        {
            locations = await Http.GetFromJsonAsync<List<AreaLocation>>("api/location/current") ?? new List<AreaLocation>();
            loaded = true;
        }
    }
}
